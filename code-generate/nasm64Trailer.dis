     1                                  ; Simple frame for NASM testing.
     2                                  ; Trial compile easily using the script trailer.
     3                                  ; The runners fully link.
     4                                  BITS 64
     5                                  DEFAULT REL
     6                                  
     7                                  
     8                                  ;SECTION .data
     9                                      ;dispMsg db 'You have entered: '
    10                                      ;lenDispMsg equ $-dispMsg 
    11                                  
    12                                  
    13                                  ;SECTION .text          ;Code Segment
    14                                     
    15                                  ;main:
    16                                  
    17                                      ;;Output the message 'The entered number is: '
    18                                      ;mov eax, 4
    19                                      ;mov ebx, 1
    20                                      ;mov ecx, dispMsg
    21                                      ;mov edx, lenDispMsg
    22                                      ;int 80h  
    23                                  
    24                                  
    25                                      
    26                                      ;ret
    27                                  
    28                                  section	.data
    29 00000000 506C6561736520656E-         userPrompt db 'Please enter a number: ' ;Ask the user to enter a number
    29 00000009 7465722061206E756D-
    29 00000012 6265723A20         
    30                                      lenUserPrompt equ $-userPrompt    ;length of the message
    31 00000017 48656C6C6F2C20776F-         msg db 'Hello, world!', 0xa ;string to be printed
    31 00000020 726C64210A         
    32                                      len equ $ - msg             ;length of the string
    33                                  
    34                                  section .bss           ;Uninitialized data
    35 00000000 <res 00000009>              num resb 9
    36                                          
    37                                  section	.text
    38                                      global main
    39                                  	
    40                                  main:
    41                                      ;prompt
    42 00000000 B801000000                  mov	rax, 1      ;system call number (sys_write)
    43 00000005 BF01000000                  mov	rdi, 1      ;file descriptor (stdout)
    44 0000000A 48BE-                       mov	rsi, userPrompt     ;message to write
    44 0000000C [0000000000000000] 
    45 00000014 BA17000000                  mov	rdx, lenUserPrompt  ;message length
    46 00000019 0F05                        syscall
    47                                      
    48                                      ;Read and store the user input
    49 0000001B B800000000                  mov rax, 0      ;system call number (sys_read)
    50 00000020 BF02000000                  mov rdi, 2      ;file descriptor
    51 00000025 48BE-                       mov rsi, num  
    51 00000027 [0000000000000000] 
    52 0000002F BA09000000                  mov rdx, 9      ;5 bytes (numeric, 1 for sign) of that information
    53 00000034 0F05                        syscall
    54                                     
    55                                      ;mov qword[num], 62
    56                                     
    57                                      ;Output the number entered
    58 00000036 B801000000                  mov rax, 1      ;system call number (sys_write)
    59 0000003B BF01000000                  mov	rdi, 1      ;file descriptor (stdout)
    60 00000040 48BE-                       mov rsi, num
    60 00000042 [0000000000000000] 
    61 0000004A BA05000000                  mov rdx, 5      ;5 bytes (numeric, 1 for sign)
    62 0000004F 0F05                        syscall
    63                                      
    64                                      ;Output the message
    65 00000051 B801000000                  mov	rax, 1      ;system call number (sys_write)
    66 00000056 BF01000000                  mov	rdi, 1      ;file descriptor (stdout)
    67 0000005B 48BE-                       mov	rsi, msg    ;message to write
    67 0000005D [1700000000000000] 
    68 00000065 BA0E000000                  mov	rdx, len    ;message length
    69 0000006A 0F05                        syscall
    70                                      
    71 0000006C B83C000000                  mov	rax, 60     ;system call number (sys_exit)
    72 00000071 BF2A000000                  mov	rdi, 42     ;system call number return
    73 00000076 0F05                        syscall
    74                                  
    75                                  
